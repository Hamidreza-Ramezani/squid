package squid.haskellopt

import squid.utils._
import org.scalatest.FunSuite

class LambdaCalcTests extends FunSuite {
  object TestHarness extends TestHarness
  
  test("Church") {
    TestHarness("Church")
    /* even just `2 I` generates overcomplicated graph! Has many trivial branch redexes...
    
    This:
      module Church = {
        x$3:4â†‘$a
      } where:
        $a = {y$5 => $9};
        $9 = ([â†“]x$3:4 ? x$c:8â†‘[â†“;ðŸš«]$d Â¿ $18);
        $d = (x$c:8 ? ðŸš«$8 Â¿ $15);
        $8 = ([â†“]x$3:4 ? x$c:10â†‘[â†“;ðŸš«]$d Â¿ $1d);
        $1d = â†“$4 @ y$5;
        $4 = (x$3:4 ? ðŸš«$e Â¿ x$3);
        $e = {x$c => $d};
        $15 = (x$c:10 ? ðŸš«y$5 Â¿ x$c);
        $18 = â†“$4 @ $8;
    
    Can be simplified to, essentially:
      [aâ†‘](\y. u) where {
        u = [â†“]a ? v Â¿ [â†“]w @ v
        v = [â†“]a ? y Â¿ [â†“]w @ y
        w = a ? ðŸš«(\x. x) Â¿ z
      }
    
    */
  }
  
}
