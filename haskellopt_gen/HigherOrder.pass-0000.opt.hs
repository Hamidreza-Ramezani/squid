-- Generated Haskell code from Graph optimizer
-- Optimized after GHC phase:
--   desugar

{-# LANGUAGE UnboxedTuples #-}
{-# LANGUAGE MagicHash #-}

module HigherOrder (gTest1,hTest3,iTest0,f0,iTest1,i,g,iTest2,hTest5,h,gTest0,p1,hTest4) where

import GHC.Num
import GHC.Types

_0(# _1 #) = (((GHC.Num.*) _1) (_2(# (_3(# _1, _4 #)), (_3(# _1, _5 #)) #)))

_6 = 2

_7 = (_8(# _9 #))

_10(# _11 #) = (_8(# _11 #))

_12 = ((GHC.Num.+) (GHC.Types.I# 1#))

_13 = ((GHC.Num.*) (GHC.Types.I# 2#))

_14(# f_a #) = f_a

_15(# f_a' #) = f_a'

_9 = (GHC.Num.fromInteger 3)

_16(# _17, _18 #) = (((GHC.Num.+) _17) _18)

_8(# _19 #) = (((GHC.Num.+) _19) 1)

_20 = (GHC.Types.I# 11#)

_21 = (GHC.Types.I# 22#)

_22(# _23, _24 #) = (((GHC.Num.+) _23) _24)

_25(# _26 #) = (((GHC.Num.+) _26) (GHC.Types.I# 1#))

_27 = (\ds_d -> (_25(# ds_d #)))

_28(# _29 #) = (((GHC.Num.*) _29) (GHC.Types.I# 2#))

_30 = (\ds_d' -> (_28(# ds_d' #)))

_31(# _32, _33 #) = (((GHC.Num.+) _32) _33)

_34(# _35, _36 #) = (\x_a -> (_31(# (_35(x_a)), (_36(x_a)) #)))

_37(# _38 #) = (((GHC.Num.+) (_38 (GHC.Types.I# 11#))) (_38 (GHC.Types.I# 22#)))

_39 = (GHC.Types.I# 11#)

_40 = (GHC.Types.I# 22#)

_41(# _42, _43 #) = (((GHC.Num.+) _43) _42)

_5 = (GHC.Types.I# 2#)

_4 = (GHC.Types.I# 3#)

_2(# _44, _45 #) = (((GHC.Num.*) _45) _44)

_46(# _47 #) = (((GHC.Num.+) _47) (GHC.Types.I# 1#))

_48(# _49 #) = (((GHC.Num.*) _49) (GHC.Types.I# 2#))

_3(# _50, _51 #) = (((GHC.Num.-) _50) _51)

f0 = (\f_a'2 -> (_22(# (f_a'2 _20), (f_a'2 _21) #)))

g = (\f_a' -> (\x_a' -> (_16(# ((_15(# f_a' #)) x_a'), ((_15(# f_a' #)) _9) #))))

gTest0 = (_16(# (_8(# 2 #)), (_8(# _9 #)) #))

gTest1 = (_16(# (_8(# (_16(# (_10(# _6 #)), _7 #)) #)), (_8(# _9 #)) #))

h = (\f_a'3 -> (_2(# (f_a'3 _4), (f_a'3 _5) #)))

hTest3 = (((GHC.Num.+) (_2(# (_12 _4), (_12 _5) #))) (_2(# (_13 _4), (_13 _5) #)))

hTest4 = (((GHC.Num.+) (_2(# (_46(# _4 #)), (_46(# _5 #)) #))) (_2(# (_48(# _4 #)), (_48(# _5 #)) #)))

hTest5 = (_2(# (_0(# _4 #)), (_0(# _5 #)) #))

i = (\f_a -> (_34(# \(x_a) -> ((_14(# f_a #)) _27), \(x_a) -> ((_14(# f_a #)) _30) #)))

iTest0 = (_34(# \(x_a) -> (_37(# _27 #)), \(x_a) -> (_37(# _30 #)) #))

iTest1 = (_31(# (_41(# (_25(# _40 #)), (_25(# _39 #)) #)), (_41(# (_28(# _40 #)), (_28(# _39 #)) #)) #))

iTest2 = (_31(# (_22(# (_25(# _20 #)), (_25(# _21 #)) #)), (_22(# (_28(# _20 #)), (_28(# _21 #)) #)) #))

p1 = (\ds_d'2 -> (_8(# ds_d'2 #)))
